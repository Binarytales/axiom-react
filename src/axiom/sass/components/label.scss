@import '../core/mixins';
@import './_mixins/scheme';

.ax-label {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  border-width: $component-border-width-base;
  border-style: solid;
  border-color: transparent;
  border-radius: $border-radius-base;
  background-color: transparent;
  font-weight: $font-weight-strong;
  text-align: center;

  @include space-inline($component-margin-h-sm);
}


/**
 * Size labels
 */
.ax-label--sm {
  padding: 0 $component-padding-h-sm;
  font-size: $font-size-sm;
}

.ax-label--md {
  padding: $component-padding-v-sm $component-padding-h-sm;
  font-size: $font-size-md;
}

.ax-label--lg {
  padding: $component-padding-v-base $component-padding-h-base;
  font-size: $font-size-base;
}


/**
 * Full width labels
 */
@mixin label-full-width {
  display: block;
  width: 100%;
  @include space-block($component-margin-v-sm);
}

.ax-label--full {
  @include label-full-width;
}

@include for-each-breakpoint {
  @include screen-less-than {
    .ax-label--full--#{breakpoint-prop(id)} {
      @include label-full-width;
    }
  }
}


/**
 * Label Colours
 */
@mixin label-color-filled($color) {
  border-color: get-color($color, 300);
  background-color: get-color($color, 50);
  color: get-color($color, 900);
}

@include for-each-scheme {
  @include for-each-color {
    .ax-label--#{color-prop(name)} {
      @include label-color-filled(color-prop(color));
    }
  }

  .ax-label--primary {
    @include label-color-filled(scheme-prop(primary));
  }
}


/**
 * Label icon
 */
.ax-label__icon {
  margin-right: $component-margin-h-sm;
}


/**
 * Label group
 * Trick to allow buttons to vertically space themselves
 * when stacked when going responsive.
 */
.ax-label__group {
  @include space-block($component-margin-v-base);

  &:last-child {
    margin-bottom: -$component-margin-h-sm;
  }

  > .ax-label {
    margin-top: 0;
    margin-bottom: $component-margin-v-sm;
  }
}
